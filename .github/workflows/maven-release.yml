name: Maven Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write  # Required to push commits and tags
  packages: write  # For potential future Maven package publishing

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history required for release plugin
          token: ${{ secrets.RELEASE_TOKEN }}
      
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Calculate versions
        id: calculate_version
        run: |
          # Get current version from pom.xml
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
          
          # Split version into parts
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          
          # Release version is the current version without -SNAPSHOT
          RELEASE_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          
          # Calculate next development version based on release type
          case "${{ github.event.inputs.release_type }}" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEXT_VERSION="${MAJOR}.${MINOR}.${PATCH}-SNAPSHOT"
          
          echo "release_version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          echo "next_version=${NEXT_VERSION}" >> $GITHUB_OUTPUT
          
          echo "Release version: ${RELEASE_VERSION}"
          echo "Next development version: ${NEXT_VERSION}"
      
      - name: Maven Release Prepare
        run: |
          mvn --batch-mode release:prepare \
            -DautoVersionSubmodules=true \
            -DreleaseVersion=${{ steps.calculate_version.outputs.release_version }} \
            -DdevelopmentVersion=${{ steps.calculate_version.outputs.next_version }}
      
      - name: Maven Release Perform
        run: |
          mvn --batch-mode release:perform